plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
}
group = 'com.kickass'
version = '0.0.1-SNAPSHOT'


repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'com.mysql:mysql-connector-j'
        // 쿼리 log 남기기
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'
        // webflux 추가
        implementation 'org.springframework.boot:spring-boot-starter-webflux'

        // Querydsl 추가
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        // 테스트시 H2 DB 사용
        testImplementation 'com.h2database:h2'
    }

    test {
        useJUnitPlatform()
    }

    bootJar.enabled = false  // core 은 bootJar 로 패키징 할 필요 없음
    jar.enabled = true
}